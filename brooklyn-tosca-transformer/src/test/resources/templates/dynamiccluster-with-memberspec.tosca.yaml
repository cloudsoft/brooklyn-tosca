tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

imports:
  - tosca-normative-types:1.0.0.wd06-SNAPSHOT

template_name: web-chat.cluster-policy-compute.mysql-compute
template_version: 1.0.0-SNAPSHOT

description: Chat Application using JBoss

node_types:
  org.apache.brooklyn.entity.webapp.ControlledDynamicWebAppCluster:
    derived_from: tosca.nodes.Root
    description: >
      A simple ControlledDynamicWebAppCluster
    properties:
      http.port:
        type: list
        required: false
        entry_schema:
          type: string
      java.sysprops:
        type: map
        required: false
        entry_schema:
          type: string
      dynamiccluster.memberspec:
        type: org.apache.brooklyn.api.entity.EntitySpec
      wars.root:
        type: string
        required: false

  org.apache.brooklyn.entity.database.mysql.MySqlNode:
    derived_from: tosca.nodes.Root
    description: |
      A MySQL server
    properties:
      creationScriptUrl:
        type: string
        required: false
    requirements:
    - host: tosca.nodes.Compute
      type: tosca.relationships.HostedOn

data_types:
  org.apache.brooklyn.api.entity.EntitySpec:
    properties:
      $brooklyn:entitySpec:
        type: map
        entry_schema:
          type: string


topology_template:
  description: Web Server Sample with Script
  node_templates:
    cluster:
      type: org.apache.brooklyn.entity.webapp.ControlledDynamicWebAppCluster
      properties:
        dynamiccluster.memberspec:
          $brooklyn:entitySpec:
            type: org.apache.brooklyn.entity.webapp.jboss.JBoss7Server

        http.port: "8080+"
        wars.root: "http://search.maven.org/remotecontent?filepath=io/brooklyn/example/brooklyn-example-hello-world-sql-webapp/0.6.0/brooklyn-example-hello-world-sql-webapp-0.6.0.war"
        java.sysprops:
          brooklyn.example.db.url: $brooklyn:formatString("jdbc:%s%s?user=%s\\&password=%s", component("db").attributeWhenReady("datastore.url"), "visitors", "brooklyn", "br00k11n")

  # if you want to tell brooklyn to assign a location at deploy time, as part of the template, this is the current way.
  # it can also be done with camp, referencing this topology template.
  groups:
    add_brooklyn_autoscaling:
      members: [ cluster ]
      policies:
      - brooklyn.location: localhost
