tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

imports:
  - tosca-normative-types:1.0.0.wd06-SNAPSHOT

template_name: brooklyn.a4c.simple.chatApplication
template_version: 1.0.0-SNAPSHOT

description: Brooklyn HelloWorld application. (ChatApplication)

relationship_types:
  brooklyn.relationships.Configure:
    derived_from: tosca.relationships.DependsOn
    valid_targets: [ tosca.capabilities.Endpoint ]
    properties:
      prop.name:
        type: string
        required: false
      prop.value:
        type: string
        required: true
      prop.collection:
        type: string
        required: false
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            DB_IP: { get_attribute: [TARGET, ip_address] }
          implementation: scripts/test.sh
        pre_configure_target:
          implementation: scripts/target.sh


node_types:
  org.apache.brooklyn.entity.webapp.tomcat.TomcatServer:
    derived_from: tosca.nodes.Root
    description: >
      A simple Tomcat server
    properties:
      wars.root:
        type: string
        required: false
      http.port:
        type: list
        required: false
        entry_schema:
          type: string
      java.sysprops:
        type: map
        required: false
        entry_schema:
          type: string
    requirements:
      - dbConnection: tosca.nodes.Root
        type: brooklyn.relationships.Configure

  org.apache.brooklyn.entity.database.mysql.MySqlNode:
    derived_from: tosca.nodes.Root
    description: >
      A MySQL server
    properties:
      "datastore.creation.script.url":
        type: string
        required: false
    capabilities:
      dbConnection: tosca.capabilities.Endpoint.Database


topology_template:
  description: Web Server Sample with Script
  node_templates:
    tomcat_server:
      type: org.apache.brooklyn.entity.webapp.tomcat.TomcatServer
      properties:
        wars.root: "http://search.maven.org/remotecontent?filepath=io/brooklyn/example/brooklyn-example-hello-world-sql-webapp/0.6.0/brooklyn-example-hello-world-sql-webapp-0.6.0.war"
        http.port: "8080+"
      requirements:
        - dbConnection:
            node: mysql_server
            relationship: brooklyn.relationships.Configure
            properties:
              prop.collection: java.sysprops
              prop.name: brooklyn.example.db.url
              prop.value: $brooklyn:formatString("jdbc:%s%s?user=%s\\&password=%s", $brooklyn:component("mysql_server").attributeWhenReady("datastore.url"), "visitors", "brooklyn", "br00k11n")

    mysql_server:
      type: org.apache.brooklyn.entity.database.mysql.MySqlNode
      properties:
        datastore.creation.script.url: "https://raw.githubusercontent.com/apache/incubator-brooklyn/286448623c417f099a8bce1a4764d6aa4589c6ea/brooklyn-server/launcher/src/test/resources/visitors-creation-script.sql"

  groups:
    add_brooklyn_location:
      members: [ mysql_server, tomcat_server ]
      policies:
      - brooklyn.location: localhost